<!doctype html>
<html>

<head>

	<link rel="stylesheet" type="text/css" href="${def:context}/dinamica.css" />
	
	<!--biblioteca generica JS/Dinamica-->
	<script type="text/javascript" src="${def:context}/action/script">
	</script>

	<!--Geolocalizacion - SIMONE Key=AIzaSyDD4qOQanvBTj9kD631CwiIGt6vmkKxOB4-->
    <script src="http://maps.google.com/maps?file=api&amp;v=3.x&amp;key=AIzaSyDD4qOQanvBTj9kD631CwiIGt6vmkKxOB4" type="text/javascript"></script>


</head>

<body>

<!--banner-->
<div class="bannerDialog">
	${lbl:b_auxiliary_labor_data}
	<img src="${def:context}/images/close.png" class="button" onclick="parent.closeDialog(); parent.search();" title="${lbl:b_close_button}" style="float:right; cursor:pointer;">
	${req:progress}
</div>

<!--formulario addnew/edit-->
<form name="form1" onsubmit="return save()" style="width:500px;">

	<!-- titulo -->
	<h1 id="formTitle">${lbl:b_add_record}</h1>

	<table>

		<!--ancho de la columna de etiquetas-->
		<col width="30%">

		<!--campos-->
			<tr>
		<td>${lbl:b_auxiliary_class}*</td>
		<td>
			<select name="smn_clase_auxiliar_rf" id="smn_clase_auxiliar_rf" onchange="chgCombo(smn_clase_auxiliar_rf.options[smn_clase_auxiliar_rf.selectedIndex].text,'smn_clase_auxiliar_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_clase_auxiliar_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_clase_auxiliar_rf_rows>
			</select> 
			<input id="smn_clase_auxiliar_rf_name" name="smn_clase_auxiliar_rf_name" type="hidden">
		</td>
		<td>
		<img src="${def:context}/images/list-add2.png" align="left" class="button" onclick="claseauxiliar();" title="${lbl:b_class_auxiliary}" >
		</td>
	</tr>
	<tr>
		<td>${lbl:b_auxiliary}*</td>
		<td>
			<select name="smn_auxiliar_rf" id="smn_auxiliar_rf" onchange="chgCombo(smn_auxiliar_rf.options[smn_auxiliar_rf.selectedIndex].text,'smn_auxiliar_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_auxiliar_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_auxiliar_rf_rows>
			</select> 
			<input id="smn_auxiliar_rf_name" name="smn_auxiliar_rf_name" type="hidden">
		</td>
		<td>
			<img src="${def:context}/images/list-add2.png" align="left" class="button" onclick="auxiliar()" title="${lbl:b_auxiliary}" >
		</td>
	</tr>
		<tr>
			<td>${lbl:b_company_name}*</td>
			<td>
				<input id="adl_nombre_compania" name="adl_nombre_compania" type="text" maxlength="100" >
			</td>
		</tr>
		<tr>
			<td>${lbl:b_rif}</td>
			<td>
				<input id="adl_rif" name="adl_rif" type="text" maxlength="16" >
			</td>
		</tr>
		<tr>
			<td>${lbl:b_departament}*</td>
			<td>
				<input id="adl_departamento" name="adl_departamento" type="text" maxlength="100" >
			</td>
		</tr>
		<tr>
			<td>${lbl:b_job_title}*</td>
			<td>
				<input id="adl_cargo" name="adl_cargo" type="text" maxlength="100" >
			</td>
		</tr>
	<tr>
		<td>${lbl:b_country}*</td>
		<td>
			<select name="smn_paises_rf" id="smn_paises_rf" onchange="chgCombo2(smn_paises_rf.options[smn_paises_rf.selectedIndex].text,'smn_paises_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_paises_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_paises_rf_rows>
			</select> 
			<input id="smn_paises_rf_name" name="smn_paises_rf_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_federal_entity}*</td>
		<td>
			<select name="smn_entidades_federales_rf" id="smn_entidades_federales_rf" onchange="chgCombo3(smn_entidades_federales_rf.options[smn_entidades_federales_rf.selectedIndex].text,'smn_entidades_federales_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_entidades_federales_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_entidades_federales_rf_rows>
			</select> 
			<input id="smn_entidades_federales_rf_name" name="smn_entidades_federales_rf_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_cities}*</td>
		<td>
			<select name="smn_ciudades_rf" id="smn_ciudades_rf" onchange="chgCombo(smn_ciudades_rf.options[smn_ciudades_rf.selectedIndex].text,'smn_ciudades_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_ciudades_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_ciudades_rf_rows>
			</select> 
			<input id="smn_ciudades_rf_name" name="smn_ciudades_rf_name" type="hidden">
		</td>
	</tr>
		<tr>
			<td>${lbl:b_addresses}</td>
			<td>
				<input id="adl_direccion" name="adl_direccion" type="text" maxlength="100" >
			</td>
		</tr>
		<tr>
			<td>${lbl:b_office_phone}</td>
			<td>
				<input id="adl_telefono_oficina" name="adl_telefono_oficina" type="text" maxlength="64" >
			</td>
		</tr>
		<tr>
			<td>${lbl:s_profile_email}</td>
			<td>
				<input id="adl_email" name="adl_email" type="text" maxlength="100"  placeholder='${lbl:b_email_format}' >

			</td>
		</tr>
		<td style="display:none">
		
		<div id="map_canvas" style="width: 400px; height: 380px" ></div>
		
			<input type="hidden" name="q" value="" size="40" />
	    	<input id="empresa" type="hidden" size="40"/>
	    	<input id="punto" type="hidden" size="40"/>
	    	<input id="kml" type="hidden" size="1024">

		</td>


	</table>

	<!--botones-->
	<input id="grabar" type="submit" value="${lbl:b_save_button}" class="button">
	<input id="limpiar" type="button" value="${lbl:b_clean_button}" onclick="addNew()" class="button">	
	<input id="copiar" type="button" value="${lbl:b_copy_button}" onclick="getFormValuesToCopy('form1')" class="button">
	<input id="pegar" type="button" value="${lbl:b_paste_button}" onclick="getFormValuesToPaste('form1')" class="button">
	<input id="salir" type="button" value="${lbl:s_exit}" onclick="parent.closeDialog(); parent.search();" class="button">	
	
	<!-- PK-->
<input type="hidden" name="id" value="">

</form>

<!--codigo de soporte del template-->
<script type="text/javascript">

	onload = function()
	{ 
		addNew();
		
		
		if('${fld:source}' == 'smn_auxiliar_contacto_rf'){ 			
			var combo = document.getElementById('smn_clase_auxiliar_rf');
			setSelectedIndex('${fld:codigo_clase}', combo, '${fld:descripcion_clase}');
			document.form1.smn_clase_auxiliar_rf.disabled=true;
			
			
			//alert('${fld:codigo_aux}-${fld:descripcion_aux}');
			var combo = document.getElementById('smn_auxiliar_rf');
			setSelectedIndex('${fld:codigo_aux}', combo, '${fld:descripcion_aux}');
			document.form1.smn_auxiliar_rf.disabled=true;
			
		}
		
	
		
		//Set first value for all combo linked
		setElementFirstIndex('smn_paises_rf');
		setElementFirstIndex('smn_entidades_federales_rf');
		setElementFirstIndex('smn_ciudades_rf');
		
		//Disabled all combo linked
		document.form1.smn_entidades_federales_rf.disabled = true;
		document.form1.smn_ciudades_rf.disabled = true;

		initialize();
		//findLocation('#51-33, Carrera 25, Medellin, Colombia', 'Postobon');

		if (id!="")
			edit(id);
	} 
	
	function chgCombo(text,id)
	{
		document.getElementById(id).value = text;
	}
	
	//configurar formulario para ingresar registro nuevo
	function addNew()
	{
		document.getElementById("formTitle").innerHTML = "${lbl:b_add_record}";
		document.getElementById("grabar").disabled=false;
		clearForm("form1");
		setFocusOnForm("form1");
	}
	
	//retorna al estado previo que corresponde
	//al estado actual de la pagina, cada llamada Ajax
	//se encarga de definir cual es la funcion de goBack() que aplica
	function goBack() 
	{
		_goBackFn()			
	}
	
	//mostrar la actualizacion de un registro
	function insert()
	{		
			clearErrorMessages();
			document.getElementById("grabar").disabled=true;
			
			//llamada Ajax...
			return ajaxCall(httpMethod="POST", 
							uri="${def:actionroot}/insert", 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=retryAddnewOrEdit);	
	}
	
	//restaurar el formulario en caso de error
	function retryAddnewOrEdit() {
		document.getElementById("grabar").disabled=false;
		setFocusOnForm("form1");		
	}
	
	var id = "${fld:id}"
	
	//grabar el formulario
	function save()
	{
		//determina si es un insert o un update
		if (document.form1.id.value=="")
			return insert();
		else
			return update();
	}
	
	//editar registro en formulario
	function edit(id)
	{
			clearErrorMessages();

			//llamada Ajax...
			ajaxCall(httpMethod="GET", 
							uri="${def:actionroot}/edit?id=" + id , 
							divResponse=null, 
							divProgress="status", 
							formName=null, 
							afterResponseFn=null, 
							onErrorFn=null);	
	}
	
	//actualizar registro en BD
	function update()
	{		
			clearErrorMessages();
			document.getElementById("grabar").disabled=true;
			
			//llamada Ajax...
			return ajaxCall(httpMethod="POST", 
							uri="${def:actionroot}/update", 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=retryAddnewOrEdit);	
	}
	
		//Author     : SIMONE
	//Description: Set first element as selected value
	//Return     : None
	function setElementFirstIndex(id)
	{
		var combo = document.getElementById(id);
		combo.selectedIndex = 0;
	}
	
	//Author     : SIMONE
	//Description: Set selected index into combo box
	//Return     : None
	function setSelectedIndexValue(value, combo) 
			{
				for (var i = 0; i < combo.options.length; i++) 
				{					
					if (combo.options[i].text == value) 
					{
						combo.options[i].selected = true;
						return;
					}
				} 
			}

	//Author     : SIMONE
	//Description: Insert new value into combo box
	//Return     : None
	function insertComboBox(code, combo, description) {
		var valueText = code;
		if (description != null)
		{
			valueText = valueText + ' - ' + description;
		}
		//alert("Insert Combo: "+valueText);
        combo.options[combo.options.length] = new Option(valueText);
	}
	
	//Author     : SIMONE
	//Description: Add new value to combo box
	//Return     : None
	function addValueToCombo(code, description, field) 
	{
	    var combo = document.getElementById(field);	    
	    insertComboBox(code, combo, description);
	}
	
	//Author     : SIMONE
	//Description: Set selected index into combo box
	//Return     : None
	function setSelectedIndex(code, combo, description) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
			var valueText = code;
			if (description != null)
			{
				valueText = valueText + ' - ' + description;
			}
	        if (combo.options[i].text == valueText) 
	        {
	        	combo.options[i].selected = true;
	            return;
	        }
	    }
	}
	
	//Author     : SIMONE
	//Description: Get text valueof selected index
	//Return     : Text associated to index
	function getSelectedIndex(combo) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
	        if (combo.options[i].selected == true) 
	        {
	            return combo.options[i].text;
	        }
	    }
	}
	function getIDSelectedIndex(combo) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
	        if (combo.options[i].selected == true) 
	        {
	            return combo.options[i].value;
	        }
	    }
	}
	

	//Author     : SIMONE
	//Description: Set value to combo box
	//Parameters : code - it is code associated into each database table 
	//             descripcion - it is description associated into each database table 
	//             field - name combo field
	//             id - identifier retrieved after transaction
	//             linked - flag indicates 'true' when combos are linked and 'false' otherwise
	//Return     : None
	function setValueComboBox(code, description, field, linked)
	{
		//add value text to combo
		addValueToCombo(code,description,field);

		//get select object 
		var combo = document.getElementById(field);
		
		//set element selected to field referenced
		setSelectedIndex(code,combo, description);
		
		//set text value to combo field
		var valueText = getSelectedIndex(combo);		
		
		//get hidden field in order to set any value
		var combo = document.getElementById(field+'_name');
		
		//alert("Text: "+valueText+" - bdID: "+bdID);
		
		combo.text  = valueText;
		combo.value = bdID;
		
		//enable linked fields
		if (linked)
		{
			if (field == 'smn_clase_auxiliar_rf')
			{
				document.form1.smn_clase_auxiliar_rf.disabled = false;
			}
			if (field == 'smn_auxiliar_rf')
			{
				document.form1.smn_auxiliar_rf.disabled = false;
			}
		}
	}
	
	var geo_id0 = null;
	function chgCombo1(text,id)
	{		
		document.form1.smn_auxiliar_rf.disabled=false;
		
		var combo = document.getElementById('smn_clase_auxiliar_rf');
		var valueCombo = getIDSelectedIndex(combo);
		geo_id0 = valueCombo.split("-").pop().trim();
		
		//findLocation(geo_id0, '');
		
		if (id!=null && id!="") 
		{
			return ajaxCall(	
							httpMethod="GET", 
							uri="${def:actionroot}/getauxiliar?id=" + geo_id0, 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=setElementFirstIndex('smn_auxiliar_rf'), //function 'setElementFirstIndex' select first element of combo list
							onErrorFn=null);				
		}
		
	}
	
	//Assign all values associated to before combo (only apply when combo are linked) 
	var geo_id2 = null;	
	function chgCombo2(text,id)
	{		
		document.form1.smn_entidades_federales_rf.disabled=false;
		
		var combo = document.getElementById('smn_paises_rf');
		//alert(combo);
		var valueCombo = getSelectedIndex(combo);
		geo_id2 = valueCombo.split("-").pop().trim();
		
		findLocation(geo_id2, '');
		
		if (id!=null && id!="") 
		{
			return ajaxCall(	
							httpMethod="GET", 
							uri="${def:actionroot}/getfederalentities?id=" + geo_id2, 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=setElementFirstIndex('smn_entidades_federales_rf'), //function 'setElementFirstIndex' select first element of combo list
							onErrorFn=null);				
		}
	}

	//Assign all values associated to before combo (only apply when combo are linked) 
	var geo_id3 = null;
	function chgCombo3(text,id)
	{	
		document.form1.smn_ciudades_rf.disabled=false;
		
		document.getElementById(id).value = text;
		
		geo_id3 = document.getElementById(id).value.split("-").pop().trim();
		
		findLocation(geo_id2 + ',' + geo_id3, '');
		
		//listboxClear("smn_ciudades_rf");
		if (id!=null && id!="") 
		{			
			return ajaxCall(	
					httpMethod="GET", 
					uri="${def:actionroot}/getcities?id=" + geo_id2 + "&" + "id2=" + geo_id3, 
					divResponse=null, 
					divProgress="status", 
					formName="form1", 
					afterResponseFn=setElementFirstIndex('smn_ciudades_rf'), //function 'setElementFirstIndex' select first element of combo list
					onErrorFn=null);			
			
		}
	}
	
	function claseauxiliar(){	
		var uri = "/smn_base/action/smn_configuracion/smn_auxiliares/smn_clase_auxiliar/editor/form";	
			//var uri ="/action/smn_configuracion/smn_auxiliares/smn_clase_auxiliar/editor/form?reference=t
		//rue&source=smn_clase_auxiliar_rf"; 
		//alert(uri);
			openDialog("editor23", uri, 650, 580); 
		}

	function auxiliar(){	
		var uri = "/smn_base/action/smn_configuracion/smn_auxiliares/smn_auxiliar_persona_natural/editor/form";	
		//var uri ="/action/smn_configuracion/smn_auxiliares/smn_auxiliar_persona_natural/editor/form?reference=true&source=smn_auxiliar_rf"; 
		//alert(uri);
			openDialog("editor23", uri, 650, 580); 
		}

	<!--Geocoder-->

    var map;
    var geocoder;

    function initialize() {
      map = new GMap2(document.getElementById("map_canvas"));
      map.setCenter(new GLatLng(40.452557, -3.510673), 15);
      
      // insertar los controles
      map.addControl(new GSmallMapControl());
      map.addControl(new GMapTypeControl());
      
      geocoder = new GClientGeocoder();
    }

    // addAddressToMap() is called when the geocoder returns an
    // answer.  It adds a marker to the map with an open info window
    // showing the nicely formatted version of the address and the country code.
    var longitude = 0.0, latitude = 0.0;
    function addAddressToMap(response) {
      map.clearOverlays();
      if (!response || response.Status.code != 200) {
        alert("Lo sentimos, no se ha encontrado su direccion!!");
      } else {
        place = response.Placemark[0];
        point = new GLatLng(place.Point.coordinates[1], place.Point.coordinates[0]);
        
        longitude = place.Point.coordinates[0];
        latitude = place.Point.coordinates[1];
        
        map.setCenter(point, 15);
        
        marker = new GMarker(point, {draggable: true});
        
        GEvent.addListener(marker, "dragstart", function() {
          map.closeInfoWindow();
        });

        GEvent.addListener(marker, "dragend", function() {
          document.getElementById("punto").value = marker.getLatLng().toUrlValue();
          marker.openInfoWindowHtml(place.address);
          //generateKML(place.address, marker.getLatLng().lng(), marker.getLatLng().lat());
        });
        
        map.addOverlay(marker);
        marker.openInfoWindowHtml(place.address);
        document.getElementById("punto").value = marker.getLatLng().toUrlValue();
        
        //generateKML(place.address, place.Point.coordinates[0], place.Point.coordinates[1]);
        
      }
    }
    
    // showLocation() is called when you click on the Search button
    // in the form.  It geocodes the address entered into the form
    // and adds a marker to the map at that location.
    function showLocation() {
      var address = document.forms[0].q.value;
      geocoder.getLocations(address, addAddressToMap);
    }

   // findLocation() is used to enter the sample addresses into the form.
    function findLocation(direccion, empresa ) {
      document.forms[0].q.value = direccion;
      document.getElementById("empresa").value = empresa;
      showLocation();
    }
    
    function generateKML(description, lng, lat){
      document.getElementById("kml").value = '';
      var kml = '<?xml version="1.0" encoding="UTF-8"?>\n';
      kml = kml + '<kml xmlns="http://earth.google.com/kml/2.2">\n';
      kml = kml + '<Placemark>\n';
      kml = kml + '\t<name>' + document.getElementById("empresa").value + '</name>\n';
      kml = kml + '\t<description>' + description + '</description>\n';
      kml = kml + '\t<Point><coordinates>' + lng + ',' + lat + ',0</coordinates></Point>\n'; 
      kml = kml + '</Placemark>\n';
      kml = kml + '</kml>\n'
      document.getElementById("kml").value = kml;
    }


	
</script>	
</body>
</html>
