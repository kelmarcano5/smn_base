<!doctype html>
<html>

<head>

	<link rel="stylesheet" type="text/css" href="${def:context}/dinamica_bkp.css" />
	<link rel="stylesheet" type="text/css" href="${def:context}/main.css" />
	
	<!--biblioteca generica JS/Dinamica-->
	<script type="text/javascript" src="${def:context}/action/script">
	</script>

</head>

<body>

<!--banner-->
<div class="bannerDialog" id="encabezado_tabla">
	${lbl:b_panel_translation}
	<img src="${def:context}/images/close.png" class="button" onclick="parent.closeDialog(); parent.search();" title="${lbl:b_close_button}" style="float:right; cursor:pointer;">
	${req:progress}
</div>

<!--formulario addnew/edit-->
<form name="form1" onsubmit="return save()" style="width:500px;">

	<!-- titulo -->
	<h1 id="formTitle">${lbl:b_add_record}</h1>

	<table>

		<!--ancho de la columna de etiquetas-->
		<col width="30%">

		<!--campos-->
		<td>${lbl:b_app}</td>
		<td>
			<select name="app_id" id="app_id" onchange="chgCombo1(app_id.options[app_id.selectedIndex].text,'app_id_name');">
				<option value="">[Cualquiera]</option>
				<app_id_rows>
				<option value="${fld:id}">${fld:item}</option>

				</app_id_rows>
			</select> 
			<input id="app_id_name" name="app_id_name" type="hidden">
		</td>
		</tr>
			<tr>
		<td>${lbl:b_panel}*</td>
		<td>
			<select name="pat_panel" id="pat_panel" onchange="chgCombo(pat_panel.options[pat_panel.selectedIndex].text,'pat_panel_name');">
				<option value="">[Cualquiera]</option>
				<pat_panel_rows>
				<option value="${fld:id}">${fld:item}</option>

				</pat_panel_rows>
			</select> 
			<input id="pat_panel_name" name="pat_panel_name" type="hidden">
		</td>
	</tr>
		<tr>
			<td>${lbl:b_description}*</td>
			<td>
				<textarea id="pat_description" name="pat_description" cols="30" rows="3"></textarea>
			</td>
		</tr>
		<tr>
			<td>${lbl:b_idiom}*</td>
			<td>
				<select name="pat_locale" id="pat_locale">
				<option value="es">${lbl:b_spanish}</option>
				<option value="en">${lbl:b_english}</option>
				<option value="fr">${lbl:b_french}</option>
				<option value="de">${lbl:b_germany}</option>
				<option value="pt">${lbl:b_portuguese}</option>
				<option value="it">${lbl:b_italian}</option>

				</select> 
			</td>
		</tr>


	</table>

	<!--botones-->
	<input id="grabar" type="submit" value="${lbl:b_save_button}" class="button">
	<input id="limpiar" type="button" value="${lbl:b_clean_button}" onclick="addNew()" class="button">	
	<input id="copiar" type="button" value="${lbl:b_copy_button}" onclick="getFormValuesToCopy('form1')" class="button">
	<input id="pegar" type="button" value="${lbl:b_paste_button}" onclick="getFormValuesToPaste('form1')" class="button">
	<input id="salir" type="button" value="${lbl:s_exit}" onclick="parent.closeDialog(); parent.search();" class="button">	
	
	<!-- PK-->
<input type="hidden" name="id" value="">

</form>

<!--codigo de soporte del template-->
<script type="text/javascript">

	onload = function()
	{ 
		addNew();

		document.form1.pat_panel.disabled=true;

		if (id!="")
			edit(id);
	} 
	
	function chgCombo(text,id)
	{
		document.getElementById(id).value = text;
	}
	
	//configurar formulario para ingresar registro nuevo
	function addNew()
	{
		document.getElementById("formTitle").innerHTML = "${lbl:b_add_record}";
		document.getElementById("grabar").disabled=false;
		clearForm("form1");
		setFocusOnForm("form1");
	}
	
	//retorna al estado previo que corresponde
	//al estado actual de la pagina, cada llamada Ajax
	//se encarga de definir cual es la funcion de goBack() que aplica
	function goBack() 
	{
		_goBackFn()			
	}
	
	//mostrar la actualizacion de un registro
	function insert()
	{		
			clearErrorMessages();
			document.getElementById("grabar").disabled=true;
			
			//llamada Ajax...
			return ajaxCall(httpMethod="POST", 
							uri="${def:actionroot}/insert", 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=retryAddnewOrEdit);	
	}
	
	//restaurar el formulario en caso de error
	function retryAddnewOrEdit() {
		document.getElementById("grabar").disabled=false;
		setFocusOnForm("form1");		
	}
	
	var id = "${fld:id}"
	
	//grabar el formulario
	function save()
	{
		//determina si es un insert o un update
		if (document.form1.id.value=="")
			return insert();
		else
			return update();
	}
	
	//editar registro en formulario
	function edit(id)
	{
			clearErrorMessages();

			//llamada Ajax...
			ajaxCall(httpMethod="GET", 
							uri="${def:actionroot}/edit?id=" + id , 
							divResponse=null, 
							divProgress="status", 
							formName=null, 
							afterResponseFn=null, 
							onErrorFn=null);	
	}
	
	//actualizar registro en BD
	function update()
	{		
			clearErrorMessages();
			document.getElementById("grabar").disabled=true;
			
			//llamada Ajax...
			return ajaxCall(httpMethod="POST", 
							uri="${def:actionroot}/update", 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=retryAddnewOrEdit);	
	}

			   //Author     : SIMONE
    //Description: Set first element as selected value
    //Return     : None
    function setElementFirstIndex(id)
    {
        var combo = document.getElementById(id);
        combo.selectedIndex = 0;
    }

    //Author     : SIMONE
    //Description: Insert new value into combo box
    //Return     : None
    function insertComboBox(code, combo, description) {
        var valueText = code;
        if (description != null)
        {
            valueText = valueText + ' - ' + description;
        }
        //alert("Insert Combo: "+valueText);
       combo.options[combo.options.length] = new Option(valueText);
    }
    
    //Author     : SIMONE
    //Description: Add new value to combo box
    //Return     : None
    function addValueToCombo(code, description, field){
        var combo = document.getElementById(field);        
        insertComboBox(code, combo, description);
    }
    
    //Author     : SIMONE
    //Description: Set selected index into combo box
    //Return     : None
    function setSelectedIndex(code, combo, description) {
        for (var i = 0; i < combo.options.length; i++)
        {
            var valueText = code;
            if (description != null)
            {
                valueText = valueText + ' - ' + description;
            }
            if (combo.options[i].text == valueText)
            {
                combo.options[i].selected = true;
                return;
            }
        }
    }
    
    //Author     : SIMONE
    //Description: Get text valueof selected index
    //Return     : Text associated to index
    function getSelectedIndex(combo){
        for (var i = 0; i < combo.options.length; i++)
        {
            if (combo.options[i].selected == true)
            {
                return combo.options[i].text;
            }
        }
    }

    function getIDSelectedIndex(combo){
        for (var i = 0; i < combo.options.length; i++)
        {
            if (combo.options[i].selected == true)
            {
                return combo.options[i].value;
            }
        }
    }
    

		//Este codigo fue creado por SIMONE y ajustado en este crud por Kelvin Marcano
	var geo_id0 = null;
	function chgCombo1(text,id)
	{
			
		document.form1.pat_panel.disabled=false;
		
		var combo = document.getElementById('app_id');
		var valueCombo = getIDSelectedIndex(combo);

		geo_id0 = valueCombo.split("-").pop().trim();
		
		//findLocation(geo_id0, '');
		
		if (id!=null && id!="") 
		{
			
			return ajaxCall(	
							httpMethod="GET", 
							uri="${def:actionroot}/getpanel?id=" + geo_id0, 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=setElementFirstIndex('pat_panel'), //function 'setElementFirstIndex' select first element of combo list
							onErrorFn=null);				
		}
		

		
	}

	
</script>	
</body>
</html>
