<!doctype html>
<html>

<head>

	<link rel="stylesheet" type="text/css" href="${def:context}/dinamica_bkp.css" />
	<link rel="stylesheet" type="text/css" href="${def:context}/main.css" />
	
	<!--biblioteca generica JS/Dinamica-->
	<script type="text/javascript" src="${def:context}/action/script"></script>
	<script type="text/javascript" src="${def:context}/action/jquery"></script>


</head>

<body>

<!--banner-->
<div class="bannerDialog" id="encabezado_tabla">
	Aplicar Descuento Item
	<img src="${def:context}/images/close.png" class="button" onclick="parent.closeDialog(); parent.search();" title="${lbl:b_close_button}" style="float:right; cursor:pointer;">
	${req:progress}
</div>

<!--formulario addnew/edit-->
<form name="form1" onsubmit="return save()" style="width:500px;">

	<!-- titulo -->
	<h1 id="formTitle">${lbl:b_add_record}</h1>

	<table>

		<!--ancho de la columna de etiquetas-->
	<col width="30%">

	<!--campos-->
		<tr>
			<td>${lbl:b_estructura_codigo}*</td>
			<td>
				<select name="smn_estructura_codigo_id" id="smn_estructura_codigo_id" onchange="chgCombo(smn_estructura_codigo_id.options[smn_estructura_codigo_id.selectedIndex].text,'smn_estructura_codigo_id_name');">
					<option value="">[Cualquiera]</option>
					<smn_estructura_codigo_id_rows>
					<option value="${fld:id}">${fld:item}</option>

					</smn_estructura_codigo_id_rows>
				</select> 
				<input id="smn_estructura_codigo_id_name" name="smn_estructura_codigo_id_name" type="hidden">
			</td>
		</tr>
		<tr>
			<td>${lbl:b_levels}*</td>
			<td>
				<input id="nes_niveles" name="nes_niveles" type="text" maxlength="10" class="numeric" placeholder="Digite su nivel del 1 al 10">
			</td>
		</tr>
		<tr>
			<td>Codigo</td>
			<td>
				<input id="nes_codigo" name="nes_codigo" type="text" maxlength="16" placeholder="Digite su codigo ejemplo 01 o 02 o 03 o 04 etc">
			</td>
		</tr>
	<!-- 	<tr>
			<td>Descripcion del Nivel</td>
			<td>
				<input id="nes_nombre" name="nes_nombre" type="text" maxlength="16" placeholder="Nombre del Nivel">
			</td>
		</tr> -->
		<tr>
			<td>${lbl:b_type}*</td>
			<td>
				<select name="nes_tipo" id="nes_tipo">
				<option value="">[Cualquiera]</option>
				<option value="TI">${lbl:b_titulo}</option>
				<option value="IT">${lbl:b_item}</option>
				<option value="OC">${lbl:b_otro_codigo}</option>

				</select> 
			</td>
		</tr>
		<tr>
			<td>Valor del Incremento en %</td>
			<td>
				<input id="bar_porcentaje" name="bar_porcentaje" type="text" maxlength="16" class="numeric">
			</td>
		</tr>
		<tr>
			<td>Valor de la tasa</td>
			<td>
				<input id="bar_tasa" name="bar_tasa" type="text" maxlength="16" class="numeric">
			</td>
		</tr>
	</table>

	<!--botones-->
	<input id="grabar" type="button" value="Procesar" class="button" onclick="procesar();";>
	<input id="salir" type="button" value="${lbl:s_exit}" onclick="parent.closeDialog(); parent.search();" class="button">	
	
	<!-- PK-->
<input type="hidden" name="id" value="">

</form>

<!--codigo de soporte del template-->
<script type="text/javascript">

	onload = function()
	{ 
		addNew();

		if (id!="")
			edit(id);
	} 

	function procesar() {
		var estruc = document.getElementById('smn_estructura_codigo_id').value;
		var nivel = document.getElementById('nes_niveles').value;
		var code = document.getElementById('nes_codigo').value;
		//var descri = document.getElementById('nes_nombre').value;
		var tipo = document.getElementById('nes_tipo').value;
		var porcen = document.getElementById('bar_porcentaje').value;
		var tasa = document.getElementById('bar_tasa').value;
		if(porcen == null){
			porcen = 0;
		}
		if (tasa == null) {
			tasa = 0;
		}
		
		//procesar2(id, estruc, nivel, code, descri, tipo, porcen, tasa);
		procesar2(id, estruc, nivel, code, tipo, porcen, tasa);


	}

	function procesar2(id, estruc, nivel, code, tipo, porcen, tasa) {
		
		var uri="${def:actionroot}/procesar?id2="+id+"&estruc="+estruc+"&nivel="+nivel+"&codig="+code+"&tipo="+tipo+"&porcen="+porcen+"&tasa="+tasa; 

		//alert("PROCESAR: "+uri);
		
		//llamada Ajax...
			 ajaxCall(httpMethod="GET", 
							uri,
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=evaluarDatos());	

	}

	function evaluarDatos() {
	alertBox ('El incremento no fue realizado motivado a que no retorno datos la consulta', '${lbl:b_continue_button}', null, 'parent.search(); parent.closeDialog();');
	}

	function chgCombo(text,id)
	{
		document.getElementById(id).value = text;
	}
	
	//configurar formulario para ingresar registro nuevo
	function addNew()
	{
		document.getElementById("formTitle").innerHTML = "${lbl:b_add_record}";
		document.getElementById("grabar").disabled=false;
		//clearForm("form1");
		setFocusOnForm("form1");
	}
	
	//retorna al estado previo que corresponde
	//al estado actual de la pagina, cada llamada Ajax
	//se encarga de definir cual es la funcion de goBack() que aplica
	function goBack() 
	{
		_goBackFn()			
	}
	
	//mostrar la actualizacion de un registro
	function insert()
	{		
			clearErrorMessages();
			document.getElementById("grabar").disabled=true;
			
			//llamada Ajax...
			return ajaxCall(httpMethod="POST", 
							uri="${def:actionroot}/insert", 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=retryAddnewOrEdit);	
	}
	
	//restaurar el formulario en caso de error
	function retryAddnewOrEdit() {
		document.getElementById("grabar").disabled=false;
		setFocusOnForm("form1");		
	}
	
	var id = "${fld:id}"
	
	//grabar el formulario
	function save()
	{
		//determina si es un insert o un update
		if (document.form1.id.value=="")
			return insert();
		else
			return update();
	}
	
	//editar registro en formulario
	function edit(id)
	{
			clearErrorMessages();

			//llamada Ajax...
			ajaxCall(httpMethod="GET", 
							uri="${def:actionroot}/edit?id=" + id , 
							divResponse=null, 
							divProgress="status", 
							formName=null, 
							afterResponseFn=null, 
							onErrorFn=null);	
	}
	
	//actualizar registro en BD
	function update()
	{		
			clearErrorMessages();
			document.getElementById("grabar").disabled=true;
			
			//llamada Ajax...
			return ajaxCall(httpMethod="POST", 
							uri="${def:actionroot}/update", 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=retryAddnewOrEdit);	
	}

//Author     : SIMONE
	//Description: Set first element as selected value
	//Return     : None
	function setElementFirstIndex(id)
	{
		var combo = document.getElementById(id);
		combo.selectedIndex = 0;
	}

	//Author     : SIMONE
	//Description: Insert new value into combo box
	//Return     : None
	function insertComboBox(code, combo, description) {
		var valueText = code;
		if (description != null)
		{
			valueText = valueText + ' - ' + description;
		}
		//alert("Insert Combo: "+valueText);
        combo.options[combo.options.length] = new Option(valueText);
	}
	
	//Author     : SIMONE
	//Description: Add new value to combo box
	//Return     : None
	function addValueToCombo(code, description, field) 
	{
	    var combo = document.getElementById(field);	    
	    insertComboBox(code, combo, description);
	}
	
	//Author     : SIMONE
	//Description: Set selected index into combo box
	//Return     : None
	function setSelectedIndex(code, combo, description) 
	{
		//alert(code, combo, descripcion);
		//alert('text = ' + combo.options[i].text + ' value = ' + combo.options[i].value)
	    for (var i = 0; i < combo.options.length; i++) 
	    {
			var valueText = code;
			if (description != null)
			{
				valueText = valueText + ' - ' + description;
			}
    	    if (combo.options[i].text == valueText) 
			{
        	//alert('text = ' + combo.options[i].text + ' value = ' + combo.options[i].value)
        	combo.options[i].selected = true;
			return;
        	}
    	}  
	}
		
	//Author     : SIMONE
	//Description: Set selected index into combo box
	//Return     : None
	function setSelectedIndexValue(value, combo) {

		console.log("valor " + value);
		for (var i = 0; i < combo.options.length; i++) 
		{					
			if (combo.options[i].value == value) 
			{
				combo.options[i].selected = true;
				return;
			}
		} 
	}
	
	
	//Author     : SIMONE
	//Description: Get text valueof selected index
	//Return     : Text associated to index
	function getSelectedIndex(combo) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
	        if (combo.options[i].selected == true) 
	        {
	            return combo.options[i].text;
	        }
	    }
	}

	function getIDSelectedIndex(combo) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
	        if (combo.options[i].selected == true) 
	        {
	            return combo.options[i].value;
	        }
	    }
	}
	
	//Author     : SIMONE
	//Description: Set value to combo box
	//Parameters : code - it is code associated into each database table 
	//             descripcion - it is description associated into each database table 
	//             field - name combo field
	//             id - identifier retrieved after transaction
	//             linked - flag indicates 'true' when combos are linked and 'false' otherwise
	//Return     : None
	function setValueComboBox(code, description, field, linked)
	{
		//add value text to combo
		addValueToCombo(code,description,field);

		//get select object 
		var combo = document.getElementById(field);
		
		//set element selected to field referenced
		setSelectedIndex(code,combo, description);
		
		//set text value to combo field
		var valueText = getSelectedIndex(combo);		
		
		//get hidden field in order to set any value
		var combo = document.getElementById(field+'_name');
		
		//alert("Text: "+valueText+" - bdID: "+bdID);
		
		combo.text  = valueText;
		combo.value = bdID;
		
		//enable linked fields
		if (linked)
		{

		}
	}

	
	
</script>	
</body>
</html>
