<!doctype html>
<html>

<head>

	<link rel="stylesheet" type="text/css" href="${def:context}/dinamica_bkp.css" />
	<link rel="stylesheet" type="text/css" href="${def:context}/main.css" />
	<link rel="stylesheet" type="text/css" href="${def:context}/select2.min.css" />
	
	<!--biblioteca generica JS/Dinamica-->
	<script type="text/javascript" src="${def:context}/action/script"></script>
	<script type="text/javascript" src="${def:context}/action/jquery"></script>
	<script type="text/javascript" src="${def:context}/action/select2"></script>

</head>

<body>

<!--banner-->
<div class="banner" id="encabezado_tabla">
	${lbl:b_rel_services_area_unit}
	<img src="${def:context}/images/close.png" class="button" onclick="parent.closeDialog(); parent.search();" title="${lbl:b_close_button}" style="float:right; cursor:pointer;">
	${req:progress}
</div>

<!--formulario de filtro-->
<form name="form1" onsubmit="return search()" style="width:650px;">

	<!--titulo-->
	<h1>${lbl:b_filter_find}</h1>

	<table>
	
	<!--ancho de la columna de etiquetas-->
	<col style="width:40%">

	<!--campos-->
	<tr>
		<td>${lbl:b_code_service}*</td>
		<td>
			<input id="smn_servicios_id2" name="smn_servicios_id2" type="text" maxlength="100" >
		</td>
	</tr>
	<tr>
		<td>${lbl:b_description_service}*</td>
		<td>
			<input id="smn_servicios_id3" name="smn_servicios_id3" type="text" maxlength="100" >
		</td>
	</tr>
	<!--control picklist de seleccion simple-->
	<tr>
	<td>${lbl:b_service}*</td>
	<td>
		<select class="servicio" name="smn_servicios_id" id="smn_servicios_id" onchange="chgCombo(smn_servicios_id.options[smn_servicios_id.selectedIndex].text,'smn_servicios_id_name');">
			<option value="">[Cualquiera]</option>
			<smn_servicios_id_rows>
			<option value="${fld:id}">${fld:item}</option>

			</smn_servicios_id_rows>
		</select> 
		<input id="smn_servicios_id_name" name="smn_servicios_id_name" type="hidden">
	</td>
	</tr>
	<tr>
		<td>${lbl:b_service_area}*</td>
		<td>
			<select class="area" name="smn_areas_servicios_rf" id="smn_areas_servicios_rf" onchange="chgCombo2(smn_areas_servicios_rf.options[smn_areas_servicios_rf.selectedIndex].text,'smn_areas_servicios_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_areas_servicios_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_areas_servicios_rf_rows>
			</select> 
			<input id="smn_areas_servicios_rf_name" name="smn_areas_servicios_rf_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_service_unit}*</td>
		<td>
			<select class="unidad" name="smn_unidades_servicios_rf" id="smn_unidades_servicios_rf" onchange="chgCombo(smn_unidades_servicios_rf.options[smn_unidades_servicios_rf.selectedIndex].text,'smn_unidades_servicios_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_unidades_servicios_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_unidades_servicios_rf_rows>
			</select> 
			<input id="smn_unidades_servicios_rf_name" name="smn_unidades_servicios_rf_name" type="hidden">
		</td>
	</tr>
	<tr>
		<td>${lbl:b_cost_centers}*</td>
		<td>
			<select class="centro" name="smn_centro_costo_rf" id="smn_centro_costo_rf" onchange="chgCombo(smn_centro_costo_rf.options[smn_centro_costo_rf.selectedIndex].text,'smn_centro_costo_rf_name');">
				<option value="">[Cualquiera]</option>
				<smn_centro_costo_rf_rows>
				<option value="${fld:id}">${fld:item}</option>

				</smn_centro_costo_rf_rows>
			</select> 
			<input id="smn_centro_costo_rf_name" name="smn_centro_costo_rf_name" type="hidden">
		</td>
	</tr>

	<tr>
		<td>${lbl:b_store_date_o}</td>
		<td>
			<input id="rsa_fecha_registro_ini" name="rsa_fecha_registro_ini" type="text" class="date" maxlength="10">
			<img src="${def:context}/images/dropdown.png" title="${lbl:b_deploy_calendar}" onclick="calendarOpen('rsa_fecha_registro_ini')">
		</td>
		
	</tr>
	<tr>
		<td>${lbl:b_store_date_p}</td>
		<td>
			<input id="rsa_fecha_registro_fin" name="rsa_fecha_registro_fin" type="text" class="date" maxlength="10">
			<img src="${def:context}/images/dropdown.png" title="${lbl:b_deploy_calendar}" onclick="calendarOpen('rsa_fecha_registro_fin')">
		</td>
	</tr>

	
	</table>

	
	<!--botones-->	
	<input type="submit" value="${lbl:b_find_button}" class="button">
	<input id="grabar" type="submit" value="${lbl:b_add_button}"  onclick="showEditor()" class="button">
	<input type="button" value="${lbl:b_clean_button}" class="button" onclick="clearForm('form1')">	
	<input id="copiar" type="button" value="${lbl:b_copy_button}" onclick="getFormValuesToCopy('form1')" class="button">
	<input id="pegar" type="button" value="${lbl:b_paste_button}" onclick="getFormValuesToPaste('form1')" class="button">
	<input id="salir" type="button" value="${lbl:s_exit}" onclick="parent.closeDialog(); parent.search();" class="button">
	
</form>

<!--panel de respuesta AJAX #1-->
<div id="response" style="display:none; width:100%; margin-top:10px;"></div>
	
</body>

<!--codigo de soporte del template-->
<script type="text/javascript">

	//inicializacion de la pagina cuando carga
	onload = function()
	{ 
		showFilter();

		$('.servicio').select2();
		$('.area').select2();
		$('.unidad').select2();
		$('.centro').select2();
		//alert('${fld:id2}');
		$('#smn_servicios_id').val('${fld:id2}').change();
		//document.form1.rsa_fecha_registro_ini.onkeypress = keypressDate;
		//document.form1.rsa_fecha_registro_fin.onkeypress = keypressDate;

		document.form1.smn_unidades_servicios_rf.disabled=true;
		//Set first value for all combo linked
		setElementFirstIndex('smn_unidades_servicios_rf');


		search();
	} 
	
	function chgCombo(text,id)
	{
		document.getElementById(id).value = text;
	}
		
	//mostrar filtro de busqueda
	function showFilter()
	{
		document.getElementById("response").style.display='none';
		setFocusOnForm("form1");
	}
	
	//ejecutar consulta
	function search()
	{
		var url = "${def:actionroot}/search";
		
		//determina si refresca y se para en la pagina actual o en la pagina 1
		if (currentPage > 0)
			url = "${def:actionroot}/search?currentpage=" + currentPage;

		//definir funcion goBack()
		_goBackFn = showFilter;
		
		clearErrorMessages();

		//llamada Ajax...
		return ajaxCall(	httpMethod="POST", 
							uri=url, 
							divResponse="response", 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=showFilter);

	}

	//mostrar una pagina del grid
	function viewPage()
	{
		var url = "${def:actionroot}/view";
		//llama a la funcion para ir a la pagina indicada 
		gotoPage(url);
	}		
	
	//retorna al estado previo que corresponde
	//al estado actual de la pagina, cada llamada Ajax
	//se encarga de definir cual es la funcion de goBack() que aplica
	function goBack() 
	{
		_goBackFn()			
	}
	
	//invoca la generacion de un PDF en un popup
	function openPDF()
	{
		var features = "height=500,width=800,status=no,toolbar=no,menubar=no,location=no,scrollbars=yes,resizable=yes";
		var url = "${def:context}${def:actionroot}/pdf?random=" + Math.random();
		var w = window.open(url, null, features);
	}

	//invoca la generacion de un Excel en un popup
	function openExcel()
	{
		var features = "height=500,width=800,status=no,toolbar=no,menubar=no,location=no,scrollbars=yes,resizable=yes";
		var url = "${def:context}${def:actionroot}/excel?random=" + Math.random();
		var w = window.open(url, null, features);
	}
	
	//exportar a xml
	function openXml() {
		var features = "height=500,width=800,status=no,toolbar=no,menubar=no,location=no,scrollbars=yes,resizable=yes";
		var url = "${def:context}${def:actionroot}/xml/search?random=" + Math.random();
		var w = window.open(url, null, features);
	}
	
	//exportar a texto
	function openTxt() {
		var features = "height=500,width=800,status=no,toolbar=no,menubar=no,location=no,scrollbars=yes,resizable=yes";
		var url = "${def:context}${def:actionroot}/txt/search?random=" + Math.random();
		var w = window.open(url, null, features);
	}
	
	//envio de emails
	function openEmails() {
		var uri = "${def:context}${def:actionroot}/email/form";					
		openDialog("editor0", uri, 950, 600);	
	}
	
	//mostrar el detalle de un registro
	function getDetail(id)
	{
//		//alert('Colocar su código aquí.')
		
		var uri = "${def:context}${def:actionroot}/detail/form?id=" + id;
		openDialog("dialog", uri, 650, 360);
		
	}
	
	//muestra un DIV+IFRAME con el formulario de CRUD
	function showEditor(id)
	{
//		//alert('Colocar su código aquí.')
		
		var uri = "";
		if (id==null)
		 	uri = "${def:context}${def:actionroot}/editor/form";
		else
			uri = "${def:context}${def:actionroot}/editor/form?id=" + id;
			
		openDialog("editor", uri, 650, 360);
		
	}
			
	function deleteRecord(id) {
//		//alert('Colocar su código aquí.')
	
		alertBox('${lbl:b_delete_record_button}', '${lbl:b_delete_button}', '${lbl:b_cancel_button}', 'deleteRecordOK(' + id + ')')				
	}
		
	//eliminar un registro
	function deleteRecordOK(id) {
			ajaxCall(httpMethod="GET", 
							uri="${def:actionroot}/delete?id=" + id,
							divResponse=null, 
							divProgress="status", 
							formName=null, 
							afterResponseFn=null, 
							onErrorFn=null);	
	}

		//Author     : SIMONE
	//Description: Set first element as selected value
	//Return     : None
	function setElementFirstIndex(id)
	{
		var combo = document.getElementById(id);
		combo.selectedIndex = 0;
	}

	//Author     : SIMONE
	//Description: Insert new value into combo box
	//Return     : None
	function insertComboBox(code, combo, description) {
		var valueText = code;
		if (description != null)
		{
			valueText = valueText + ' - ' + description;
		}
		//alert("Insert Combo: "+valueText);
        combo.options[combo.options.length] = new Option(valueText);
	}
	
	//Author     : SIMONE
	//Description: Add new value to combo box
	//Return     : None
	function addValueToCombo(code, description, field) 
	{
	    var combo = document.getElementById(field);	    
	    insertComboBox(code, combo, description);
	}
	
	//Author     : SIMONE
	//Description: Set selected index into combo box
	//Return     : None
	function setSelectedIndex(code, combo, description) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
			var valueText = code;
			if (description != null)
			{
				valueText = valueText + ' - ' + description;
			}
	        if (combo.options[i].text == valueText) 
	        {
	        	combo.options[i].selected = true;
	            return;
	        }
	    }
	}
	
	//Author     : SIMONE
	//Description: Get text valueof selected index
	//Return     : Text associated to index
	function getSelectedIndex(combo) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
	        if (combo.options[i].selected == true) 
	        {
	            return combo.options[i].text;
	        }
	    }
	}

	//Author     : SIMONE
	//Description: Get Id value selected index
	//Return     : Text associated to index
	function getIDSelectedIndex(combo) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
	        if (combo.options[i].selected == true) 
	        {
	            return combo.options[i].value;
	        }
	    }
	}

	var geo_id4 = null;
	function chgCombo2(text,id)
	{		
		document.form1.smn_unidades_servicios_rf.disabled=false;
		
		var combo = document.getElementById('smn_areas_servicios_rf');
		var valueCombo = getIDSelectedIndex(combo);
		geo_id4 = valueCombo.split("-").pop().trim();
		
		//findLocation(geo_id0, '');
		
		if (id!=null && id!="") 
		{
			return ajaxCall(	
							httpMethod="GET", 
							uri="${def:actionroot}/getunidadservicio?id=" + geo_id4, 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=setElementFirstIndex('smn_unidades_servicios_rf'), //function 'setElementFirstIndex' select first element of combo list
							onErrorFn=null);				
		}
		
	}


			
</script>

</html>
