<!doctype html>
<html>

<head>

	<link rel="stylesheet" type="text/css" href="${def:context}/dinamica_bkp.css" />
	<link rel="stylesheet" type="text/css" href="${def:context}/main.css" />
	<link rel="stylesheet" type="text/css" href="${def:context}/select2.min.css" />
	
	<!--biblioteca generica JS/Dinamica-->
	<script type="text/javascript" src="${def:context}/action/script"></script>
	<script type="text/javascript" src="${def:context}/action/jquery"></script>
	<script type="text/javascript" src="${def:context}/action/select2"></script>

</head>

<body>

<!--banner-->
<div class="bannerDialog" id="encabezado_tabla">
	${lbl:b_users}
	<img src="${def:context}/images/close.png" class="button" onclick="parent.closeDialog(); parent.search();" title="${lbl:b_close_button}" style="float:right; cursor:pointer;">
	${req:progress}
</div>

<!--formulario addnew/edit-->
<form name="form1" onsubmit="return save()" style="width:580px;">

	<!-- titulo -->
	<h1 id="formTitle">${lbl:b_add_record}</h1>

	<table>

		<!--ancho de la columna de etiquetas-->
		<col width="30%">

		<!--campos-->
		<tr style="display:none">
			<td>${lbl:b_nature_auxiliary}*</td>
			<td>
				<select name="smn_naturaleza_auxiliar_rf" id="smn_naturaleza_auxiliar_rf" onchange="chgCombo(smn_naturaleza_auxiliar_rf.options[smn_naturaleza_auxiliar_rf.selectedIndex].text,'smn_naturaleza_auxiliar_rf_name');">
					<option value="">[Cualquiera]</option>
					<smn_naturaleza_auxiliar_rf_rows>
					<option value="${fld:id}">${fld:item}</option>

					</smn_naturaleza_auxiliar_rf_rows>
				</select> 
				<input id="smn_naturaleza_auxiliar_rf_name" name="smn_naturaleza_auxiliar_rf_name" type="hidden">
			</td>
		</tr>
		<tr>
			<td>${lbl:b_registers_type}*</td>
			<td>
				<select name="smn_tipo_registro_rf" id="smn_tipo_registro_rf" onchange="chgCombo1(smn_tipo_registro_rf.options[smn_tipo_registro_rf.selectedIndex].text,'smn_tipo_registro_rf_name');">
					<option value="">[Cualquiera]</option>
					<smn_tipo_registro_rf_rows>
					<option value="${fld:id}">${fld:item}</option>

					</smn_tipo_registro_rf_rows>
				</select> 
				<input id="smn_tipo_registro_rf_name" name="smn_tipo_registro_rf_name" type="hidden">
			</td>
		</tr>
		<tr>
			<td>${lbl:b_class_auxiliary}*</td>
			<td>
				<select name="smn_clase_auxiliar_rf" id="smn_clase_auxiliar_rf" onchange="chgCombo2(smn_clase_auxiliar_rf.options[smn_clase_auxiliar_rf.selectedIndex].text,'smn_clase_auxiliar_rf_name');">
					<option value="">[Cualquiera]</option>
					<smn_clase_auxiliar_rf_rows>
					<option value="${fld:id}">${fld:item}</option>

					</smn_clase_auxiliar_rf_rows>
				</select> 
				<input id="smn_clase_auxiliar_rf_name" name="smn_clase_auxiliar_rf_name" type="hidden">
			</td>
		</tr>	
		<tr>
			<td>${lbl:b_document_type_oficial}</td>
			<td>
				<select name="aux_tipo_doc_oficial_rf" id="aux_tipo_doc_oficial_rf" onchange="chgCombo(aux_tipo_doc_oficial_rf.options[aux_tipo_doc_oficial_rf.selectedIndex].text,'aux_tipo_doc_oficial_rf_name');">
					<option value="">[Cualquiera]</option>
					<aux_tipo_doc_oficial_rf_rows>
					<option value="${fld:smn_tipo_doc_oficial_id}">${fld:item}</option>

					</aux_tipo_doc_oficial_rf_rows>
				</select> 
				<input id="aux_tipo_doc_oficial_rf_name" name="aux_tipo_doc_oficial_rf_name" type="hidden">
			</td>
		</tr>
		<tr>
			<td>${lbl:b_document_number_oficial}</td>
			<td>
				<input id="aux_num_doc_oficial" name="aux_num_doc_oficial" type="text" maxlength="12" onchange="mostrarValor(this.value);" >
				<input id="verificar" type="button" value="${lbl:b_verify}" onclick="Verificar()" class="button">	
			</td>
		</tr>
		<tr>
			<td>
				
			</td>
		</tr>
		<tr style="display:none">
			<td>${lbl:b_person_type}*</td>
			<td>
				<select name="aux_tipo_persona" id="aux_tipo_persona">
				<option value="PJ">${lbl:b_legal_person_value}</option>
				<option value="PN">${lbl:b_natural_person_value}</option>
				<option value="GO">${lbl:b_government_person}</option>

				</select> 
			</td>
		</tr>
		<tr>
			<td>${lbl:b_last_name}</td>
			<td>
				<input id="aux_apellidos" name="aux_apellidos" type="text" maxlength="64" >
			</td>
		</tr>
		<tr>
			<td>${lbl:b_first_name}</td>
			<td>
				<input id="aux_nombres" name="aux_nombres" type="text" maxlength="64" >
			</td>
		</tr>
		<tr>
			<td>${lbl:b_code_user}*</td>
			<td>
				<input id="userlogin" name="userlogin" value="${fld:id}-${fld:aux_num_doc_oficial}" type="text" maxlength="12" placeholder="Nombre de Usuario" style="width:250px" disabled>
			</td>
		</tr>
		<tr style="display:none">
			<td>${lbl:b_code_user}*</td>
			<td>
				<input id="smn_user_rf" name="smn_user_rf" type="text" maxlength="10" placeholder="Codigo Usuario" style="width:250px">
			</td>
		</tr>
		<tr>
			<td>${lbl:s_fld_password}*</td>
			<td>
			<input id="passwd" name="passwd" type="password" size="25" maxlength="15" placeholder="Use sólo letras y números (sin espacios)" style="width:250px">
			</td>
		</tr>
		<tr>
			<td>${lbl:s_fld_confirm}*</td>
			<td>
				<input id="confirm" name="confirm" type="password" size="25" maxlength="15" placeholder="Use sólo letras y números (sin espacios)" style="width:250px">
			</td>
		</tr>
		<tr>
			<td>${lbl:s_profile_email}*</td>
			<td>
				<input id="email" name="email" type="text" maxlength="96" placeholder="Introduzca una dirección de email válida" style="width:250px">
			</td>
		</tr>
		<tr>
			<td>${lbl:b_phone}*</td>
			<td>
				<input id="auc_descripcion" name="auc_descripcion" type="text" maxlength="100" placeholder="Introduzca un Número de Teléfono" style="width:250px">
			</td>
		</tr>
		<tr id="permisos">
			<td>Desear agregar permisos a este usuario</td>
			<td>
			<select name="permiso" id="permiso" onchange="habilitar_permisos();">
				<option value="">[Cualquiera]</option>
				<option value="SI">${lbl:b_yes}</option>
				<option value="NO">${lbl:b_not}</option>
			</select> 
			</td>
		</tr>
		<tr id="chktd">
			<td>Modulos</td>
			<td id="rols_mod">
			</td>
		</tr>
		<tr id="user_system">
			<td>${lbl:b_code_user}*</td>
			<td>
				<input id="userlogin_2" name="userlogin_2" value="${fld:id}-${fld:aux_num_doc_oficial}" type="text" maxlength="12" placeholder="Nombre de Usuario System" style="width:250px" disabled>
			</td>
		</tr>

	</table>

	<!--botones-->
	<input id="grabar" type="submit" value="${lbl:b_save_button}" class="button">
	<input id="limpiar" type="button" value="${lbl:b_clean_button}" onclick="addNew()" class="button">	
	<input id="copiar" type="button" value="${lbl:b_copy_button}" onclick="getFormValuesToCopy('form1')" class="button">
	<input id="pegar" type="button" value="${lbl:b_paste_button}" onclick="getFormValuesToPaste('form1')" class="button">
	<input id="salir" type="button" value="${lbl:s_exit}" onclick="parent.closeDialog(); parent.search();" class="button">	
	
	<!-- PK-->
<input type="hidden" name="id" value="">

</form>

<!--codigo de soporte del template-->
<script type="text/javascript">

	onload = function()
	{ 
		addNew();
		//debugger;
		document.form1.smn_clase_auxiliar_rf.disabled=true;
		
		//Set first value for all combo linked
		setElementFirstIndex('smn_clase_auxiliar_rf');
		//alert('${smn_user_rf}');
		if (id!="")
			edit(id);
	} 

	//Function para contactenar el id de la clase auxiliar y el numero de documento oficial Creada por Prog. Kelvin Marcano//
	function mostrarValor(a, b){
	 	var a = document.getElementById('aux_tipo_doc_oficial_rf');
	 	var c = a.options[a.selectedIndex].text;
	 	var d = c.substring(2,0);
	    var b = document.getElementById('aux_num_doc_oficial').value;
	    var us =  d+""+b;    


	    var cl = document.getElementById('smn_clase_auxiliar_rf');
	 	var clop = cl.options[cl.selectedIndex].text;
	 	var codcla = clop.substring(2,0);
	 	 var us_s =  codcla+""+b;    

	 	console.log("CLASE: "+us_s);

	    console.log(us);
	    document.getElementById('userlogin').value=us;   
	    document.getElementById('userlogin_2').value=us_s;   
	 }

	function habilitar_permisos() {
		var permiso = document.getElementById('permiso').value;
		
		if (permiso == 'SI') {
			chgCombo_rol();
			//alert("SI");
			document.getElementById('chktd').style.display='';
			//document.getElementById('role_id').style.display='';
		}else{
			//alert("NO");
			document.getElementById('chktd').style.display='none';
			//document.getElementById('role_id').style.display='none';
		}
	}

	function Verificar() {
		var numdoc = document.getElementById('aux_num_doc_oficial').value;
		// body...
		//alert("hola");
		if (numdoc == "" ) {
			alert("Campo Vacio por favor llenar");
		}else{
		//llamada Ajax...
			ajaxCall(httpMethod="GET", 
							uri="${def:actionroot}/obtenerdatos?id=" + numdoc, 
							divResponse=null, 
							divProgress="status", 
							formName=null, 
							afterResponseFn=null, 
							onErrorFn=null);	

		}
	}

	
	
	function chgCombo(text,id)
	{
		document.getElementById(id).value = text;
	}
	
	//configurar formulario para ingresar registro nuevo
	function addNew()
	{
		document.getElementById("formTitle").innerHTML = "${lbl:b_add_record}";
		document.getElementById("grabar").disabled=false;
		clearForm("form1");
		setFocusOnForm("form1");
	}
	
	//retorna al estado previo que corresponde
	//al estado actual de la pagina, cada llamada Ajax
	//se encarga de definir cual es la funcion de goBack() que aplica
	function goBack() 
	{
		_goBackFn()			
	}
	
	//mostrar la actualizacion de un registro
	function insert()
	{		
			clearErrorMessages();
			document.getElementById("grabar").disabled=true;
			
			//llamada Ajax...
			return ajaxCall(httpMethod="POST", 
							uri="${def:actionroot}/insert", 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=retryAddnewOrEdit);	
	}

	//mostrar la actualizacion de un registro
	function insert_aux()
	{		
			clearErrorMessages();
			document.getElementById("grabar").disabled=true;
			
			//llamada Ajax...
			return ajaxCall(httpMethod="POST", 
							uri="${def:actionroot}/insert_aux", 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=retryAddnewOrEdit);	
	}
	
	//restaurar el formulario en caso de error
	function retryAddnewOrEdit() {
		document.getElementById("grabar").disabled=false;
		setFocusOnForm("form1");		
	}
	
	var id = "${fld:id}"
	
	//grabar el formulario
	function save()
	{
		//determina si es un insert o un update
		if (document.form1.id.value==""){
			return insert();	
		}
		else{
			return update();
		}
	}
	
	//editar registro en formulario
	function edit(id)
	{
		document.form1.aux_num_doc_oficial.disabled=true;
			clearErrorMessages();

			//llamada Ajax...
			ajaxCall(httpMethod="GET", 
							uri="${def:actionroot}/edit?id=" + id, 
							divResponse=null, 
							divProgress="status", 
							formName=null, 
							afterResponseFn=null, 
							onErrorFn=null);	
	}
	
	//actualizar registro en BD
	function update()
	{		
		document.form1.userlogin.disabled=true;

		var verf = document.getElementById("verificar").disabled;
		//document.form1.verificar.disabled=true;
			clearErrorMessages();
			document.getElementById("grabar").disabled=true;
			
			//llamada Ajax...
			return ajaxCall(httpMethod="POST", 
							uri="${def:actionroot}/update", 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, 
							onErrorFn=retryAddnewOrEdit);	
	}

	//Author     : SIMONE
	//Description: Set first element as selected value
	//Return     : None
	function setElementFirstIndex(id)
	{
		var combo = document.getElementById(id);
		combo.selectedIndex = 0;
	}

	//Author     : SIMONE
	//Description: Set first element as selected value
	//Return     : None
	function setCheckBox(id)
	{
		
		setCheckboxValue('role_id','${fld:role_id}','form1');
		//alert('${fld:role_id}');
	}

	//Author     : SIMONE
	//Description: Insert new value into combo box
	//Return     : None
	function insertComboBox(code, combo, description) {
		var valueText = code;
		if (description != null)
		{
			valueText = valueText + ' - ' + description;
		}
		//alert("Insert Combo: "+valueText);
        combo.options[combo.options.length] = new Option(valueText);
	}
	
	//Author     : SIMONE
	//Description: Add new value to combo box
	//Return     : None
	function addValueToCombo(code, description, field) 
	{
	    var combo = document.getElementById(field);	    
	    insertComboBox(code, combo, description);
	}
	
	//Author     : SIMONE
	//Description: Set selected index into combo box
	//Return     : None
	function setSelectedIndex(code, combo, description) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
			var valueText = code;
			if (description != null)
			{
				valueText = valueText + ' - ' + description;
			}
	        if (combo.options[i].text == valueText) 
	        {
	        	combo.options[i].selected = true;
	            return;
	        }
	    }
	}
	
	//Author     : SIMONE
	//Description: Get text valueof selected index
	//Return     : Text associated to index
	function getSelectedIndex(combo) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
	        if (combo.options[i].selected == true) 
	        {
	            return combo.options[i].text;
	        }
	    }
	}
	function getIDSelectedIndex(combo) 
	{
	    for (var i = 0; i < combo.options.length; i++) 
	    {
	        if (combo.options[i].selected == true) 
	        {
	            return combo.options[i].value;
	        }
	    }
	}
	

	//Author     : SIMONE
	//Description: Set value to combo box
	//Parameters : code - it is code associated into each database table 
	//             descripcion - it is description associated into each database table 
	//             field - name combo field
	//             id - identifier retrieved after transaction
	//             linked - flag indicates 'true' when combos are linked and 'false' otherwise
	//Return     : None
	function setValueComboBox(code, description, field, linked)
	{
		//add value text to combo
		addValueToCombo(code,description,field);

		//get select object 
		var combo = document.getElementById(field);
		
		//set element selected to field referenced
		setSelectedIndex(code,combo, description);
		
		//set text value to combo field
		var valueText = getSelectedIndex(combo);		
		
		//get hidden field in order to set any value
		var combo = document.getElementById(field+'_name');
		
		//alert("Text: "+valueText+" - bdID: "+bdID);
		
		combo.text  = valueText;
		combo.value = bdID;
		
		//enable linked fields
		if (linked)
		{
			if (field == 'prs_clase_auxiliar')
			{
				document.form1.prs_clase_auxiliar.disabled = false;
			}
			if (field == 'prs_auxiliar')
			{
				document.form1.prs_auxiliar.disabled = true;
			}
			
		}
	}
	
	//Este codigo fue creado por SIMONE y ajustado en este crud por Kelvin Marcano
	var geo_id0 = null;
	function chgCombo1(text,id)
	{
			
		document.form1.smn_clase_auxiliar_rf.disabled=false;
		
		var combo = document.getElementById('smn_tipo_registro_rf');
		var valueCombo = getIDSelectedIndex(combo);

		geo_id0 = valueCombo.split("-").pop().trim();

		if (id!=null && id!="") 
		{
			
			return ajaxCall(	
							httpMethod="GET", 
							uri="${def:actionroot}/getclase?id=" + geo_id0, 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=setElementFirstIndex('smn_clase_auxiliar_rf'), //function 'setElementFirstIndex' select first element of combo list
							onErrorFn=null);				
		}
	}

			//Este codigo fue creado por SIMONE y ajustado en este crud por Kelvin Marcano
	var geo_id0 = null;
	function chgCombo_rol(){
			return ajaxCall(	
							httpMethod="GET", 
							uri="${def:actionroot}/getrol", 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=null, //function 'setElementFirstIndex' select first element of combo list
							onErrorFn=null);				
	}

	//Este codigo fue creado por SIMONE y ajustado en este crud por Kelvin Marcano
	var geo_id2 = null;
	function chgCombo2(text,id){
			
		//document.form1.smn_clase_auxiliar_rf.disabled=false;
		
		var combo = document.getElementById('smn_clase_auxiliar_rf');
		var valueCombo = getIDSelectedIndex(combo);
		geo_id2 = valueCombo.split("-").pop().trim();

		if (id!=null && id!="") 
		{
			return ajaxCall(	
							httpMethod="GET", 
							uri="${def:actionroot}/getObtenerNaturaleza?id=" + geo_id2, 
							divResponse=null, 
							divProgress="status", 
							formName="form1", 
							afterResponseFn=setElementFirstIndex('smn_naturaleza_auxiliar_rf'), //function 'setElementFirstIndex' select first element of combo list
							onErrorFn=null);				
		}
	}

	
</script>	
</body>
</html>
